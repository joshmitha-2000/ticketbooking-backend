generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)
  bookings  Booking[]
  confirmed Boolean   @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Movie {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  posterUrl   String
  language    String
  runtime     Int // runtime in minutes
  shows       Show[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Theatre {
  id           Int    @id @default(autoincrement())
  name         String
  location     String
  seatCapacity Int
  shows        Show[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Show {
  id        Int       @id @default(autoincrement())
  movie     Movie     @relation(fields: [movieId], references: [id])
  movieId   Int
  theatre   Theatre   @relation(fields: [theatreId], references: [id])
  theatreId Int
  showTime  DateTime
  seats     Seat[]
  bookings  Booking[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Seat {
  id         Int      @id @default(autoincrement())
  seatNumber String // e.g., "A1", "B5"
  show       Show     @relation(fields: [showId], references: [id])
  showId     Int
  booking    Booking? @relation(fields: [bookingId], references: [id])
  bookingId  Int?

  isBooked Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Booking {
  id         Int           @id @default(autoincrement())
  user       User          @relation(fields: [userId], references: [id])
  userId     Int
  show       Show          @relation(fields: [showId], references: [id])
  showId     Int
  seats      Seat[]
  totalPrice Float
  status     BookingStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
